{"version":3,"sources":["components/Filter.js","services/PersonService.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","_ref","value","handleChange","react_default","a","createElement","onChange","baseUrl","PersonService","axios","get","then","response","data","newObject","post","id","put","concat","delete","Person","props","name","toUpperCase","startsWith","filter","number","onClick","e","respData","personService","console","log","setErrorMessage","setTimeout","setPersons","persons","person","DeleteItem","Persons","p_persons","p_setPersons","p_filter","newFilter","map","components_Person","deletePerson","Notification","message","className","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setNewFilter","_useState9","_useState10","errorMessage","useEffect","initialPersons","components_Notification","components_Filter","event","target","onSubmit","preventDefault","pos","findIndex","window","confirm","personObject","returnedPerson","catch","error","errmsg","includes","type","components_Persons","p","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.780e751d.chunk.js","sourcesContent":["// --------------------------------------------------------------\r\n// --- Component:   Filter\r\n// --- Purpose:     f\r\n// --- Date:        8.5.2019 Timo Kivinen\r\n// ---\r\n// --------------------------------------------------------------\r\nimport React from 'react'\r\n\r\n// ----------------------------------------------\r\n// ---\r\n// ----------------------------------------------\r\nconst Filter = ({value, handleChange}) => {\r\n    return (\r\n            <div>Rajaa näytettäviä: \r\n                <input value={value} onChange={handleChange}/>\r\n            </div>\r\n    )\r\n  }\r\n  export default Filter","// --------------------------------------------------------------\r\n// --- Name:    PersonService.js\r\n// --- Purpose: Tietokanta-operaatiot\r\n// --- Date:    21.5.2017 Timo Kivinen\r\n// --------------------------------------------------------------\r\nimport axios from 'axios'\r\n// --- const baseUrl = 'http://localhost:3001/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, deletePerson}\r\n","// --------------------------------------------------------------\r\n// --- Component:   Person\r\n// --- Purpose:     Yksittäisen henkilön renderöivä komponentti\r\n// ---              Muodostetaan delete-nappi\r\n// --- Date:        25.5.2019 Timo Kivinen\r\n// --- Fixes:       13.8.2019      \r\n// --------------------------------------------------------------\r\nimport React from 'react'\r\nimport personService from '../services/PersonService'\r\n\r\n// --------------------------------------------------------------\r\n// --- Poistetaan rivi\r\n// --- Palautetaan kaikki muut rivit paitsi poistettava (filterillä)\r\n// --------------------------------------------------------------\r\nconst DeleteItem = (props) => {\r\n  const respData = personService.deletePerson(props.id)\r\n  console.log('***respData: ', respData)\r\n\r\n  props.setErrorMessage(`Henkilö  '${props.name}' on poistettu.`)\r\n\r\n  setTimeout(() => {\r\n      props.setErrorMessage(null)\r\n  }, 3000)\r\n\r\n  // --- Palautetaan kaikki muut rivit paitsi parametrina oleva rivi\r\n  props.setPersons(props.persons.filter(person => {\r\n      return person.id !== props.id\r\n  }))\r\n}\r\n\r\n// --------------------------------------------------------------\r\n// --- Person-komponentti\r\n// --- - listataan rivit, joiden alku noudattaa filtterin toivetta\r\n// --- - palautetaan tyhjä, jos riviä ei tulosteta listalle\r\n// --------------------------------------------------------------\r\nconst Person = (props) => {\r\n  if (props.name.toUpperCase().startsWith(props.filter.toUpperCase()) ||  props.filter === '') {\r\n      return (\r\n          <div>{props.name}&nbsp;&nbsp;{props.number} &nbsp;&nbsp;\r\n              <button onClick={(e)=>DeleteItem(props)}>\r\n                  Delete\r\n              </button>   \r\n          </div> \r\n      )\r\n  }\r\n  return ('')      \r\n}\r\n\r\nexport default Person\r\n","\r\n// --------------------------------------------------------------\r\n// --- Persons-komponentti\r\n// --- \r\n// --- 21.5.2019 Timo Kivinen\r\n// --------------------------------------------------------------\r\nimport React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = (props) => {\r\n    const p_persons=props.persons\r\n    const p_setPersons=props.setPersons\r\n    const p_filter=props.newFilter\r\n    // ---------------------------------------------------\r\n    // --- Kaikki rivit\r\n    // ---------------------------------------------------    \r\n    const rows_all = () => p_persons.map(person =>\r\n        <Person\r\n        name={person.name}\r\n        number={person.number}\r\n        id={person.id}        \r\n        filter={p_filter}\r\n        persons={p_persons}\r\n        setPersons={p_setPersons}\r\n        deletePerson={props.deletePerson}        \r\n        setErrorMessage={props.setErrorMessage}\r\n        />\r\n    )\r\n    return rows_all()\r\n }\r\n export default Persons","// --------------------------------------------------------------\r\n// --- Component:   Notification\r\n// --- Purpose:     f\r\n// --- Date:        25.5.2019 Timo Kivinen\r\n// ---\r\n// --------------------------------------------------------------\r\nimport React from 'react'\r\n\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification  ","// --------------------------------------------------------------------------\r\n// --- Tehtävä          3.11f:\r\n// --- Pvm:             21.6.2019 Timo Kivinen\r\n// ---                  \r\n// --------------------------------------------------------------------------\r\nimport React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/PersonService'\r\n\r\n\r\n// -------------------------------------------------------------------------\r\n// --- APP\r\n// -------------------------------------------------------------------------\r\nconst App = (props) => {\r\n\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('qwerty')\r\n  const [ newNumber, setNewNumber ] = useState('1234567890')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  // -------------------------------------------------------------------------\r\n  // --- Editoiminen on mahdollista, kun rekisteröidään tapahtumankäsittelijä\r\n  // -------------------------------------------------------------------------\r\n  const handleNameChange = (event) => {\r\n      // console.log('handle:', event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n  // -------------------------------------------------------------------------\r\n  // --- Editoiminen on mahdollista, kun rekisteröidään tapahtumankäsittelijä\r\n  // -------------------------------------------------------------------------\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n  // -------------------------------------------------------------------------\r\n  // --- Editoiminen on mahdollista, kun rekisteröidään tapahtumankäsittelijä\r\n  // -------------------------------------------------------------------------\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n  // ---------------------------------------------------\r\n  // --- EFFECT HOOK\r\n  // ---------------------------------------------------\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n        .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])          \r\n  \r\n  // --------------------------------------------------------------\r\n  // --- addPerson - Henkilön ja puhelinnumeron lisäys\r\n  // --------------------------------------------------------------\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    // --- Löytyykö nimi jo listalta?\r\n    const pos = persons.findIndex(person => person.name.toUpperCase() === newName.toUpperCase())\r\n    if (pos > -1) {\r\n      if (!window.confirm(`${newName} on jo luettelossa, korvataanko numero?`)) {\r\n        // ---------------------------------------------------\r\n        // --- Hylätään tapahtuma\r\n        // ---------------------------------------------------\r\n        setErrorMessage(`Tapahtuma on hylätty.`)\r\n        setTimeout(() => { setErrorMessage(null) }, 3000)\r\n        return 0\r\n      }\r\n      else {\r\n        // ---------------------------------------------------\r\n        // --- PUHELINNUMERON PÄIVITYS\r\n        // ---------------------------------------------------\r\n        const personObject = {\r\n          name: newName,\r\n          number: newNumber,\r\n          }\r\n          personService\r\n            .update(persons[pos].id, personObject)\r\n            .then(returnedPerson => {\r\n              // --- Renderöidään lista\r\n              setPersons(persons.map(person => person.id !== persons[pos].id ? person : returnedPerson))\r\n              setErrorMessage(`Puhelinnumero on päivitetty. uuusi numero on '${newNumber}' `)\r\n            })\r\n            .catch(error => {\r\n              let errmsg = `Puhelinnumeron päivitys epäonnistui.  `\r\n              if(error.message.includes('404')) {\r\n                errmsg = errmsg.concat('Asiakas on jo poistettu!!')\r\n              }\r\n              setErrorMessage(errmsg)\r\n            })\r\n            \r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, 3000)\r\n            \r\n          }\r\n    }\r\n    else {\r\n        // ---------------------------------------------------\r\n        // --- Nimeä ei löytynyt listalta\r\n        // --- UUSI HENKILÖ+PUHELINNUMERO\r\n        // ---------------------------------------------------\r\n        const personObject = {\r\n          name: newName,\r\n          number: newNumber,\r\n        }\r\n        // --- Käytetään uuden rivin luomiseen service-kenttää \"create\"\r\n        personService\r\n          .create(personObject)\r\n          .then(returnedPerson => {\r\n            setPersons(persons.concat(returnedPerson))\r\n//            setNewName('')\r\n          })\r\n          setErrorMessage(`uusi henkilö lisätty.`)\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 3000)\r\n\r\n        }\r\n  console.log('*AddPerson --- END')\r\n  \r\n  } // -- AddPerson\r\n\r\n  const deletePerson = (p) => {\r\n    console.log('DELETEPERSON:', p)\r\n  }\r\n\r\n  // ---------------------------------------------------\r\n  // --- RETURN\r\n  // ---------------------------------------------------\r\n  return (\r\n        <div>\r\n        <h2>Puhelinluettelo</h2>\r\n\r\n        <Notification message={errorMessage} />\r\n\r\n        <div>\r\n            <Filter value={newFilter} handleChange={handleFilterChange}/>\r\n        </div>\r\n\r\n        <h3>Lisää uusi</h3>\r\n        \r\n        <form onSubmit={addPerson}>\r\n          <div>nimi: <input value={newName} onChange={handleNameChange}/></div>\r\n          <div>numero:<input value={newNumber} onChange={handleNumberChange}/></div>\r\n          <div><button type=\"submit\">lisää</button></div>\r\n                 \r\n        </form>\r\n\r\n        <h2>Numerot</h2>\r\n       \r\n        <Persons persons={persons} newFilter={newFilter} setPersons={setPersons} setErrorMessage={setErrorMessage} \r\n              deletePerson={deletePerson}/>\r\n        </div>\r\n      )\r\n  }\r\n\r\n  export default App\r\n","// --------------------------------------------------------------------------\n// --- Tehtävä          3.11f\n// --- Pvm:             21.6.2019 Timo Kivinen\n// ---                  \n// --- Aikaa käytetty:  3 h\n// --------------------------------------------------------------------------\n// --- Projektin luonti:    npx create-react-app xxx\n// --- Axios install:       npm install axios\n// --------------------------------------------------------------------------\n// --- 1) Back end:         app.use(express.static('build'))\n// --- 2) Front end:        baseUrl = /aaa/bbb\n// --- 3) Production build  npm run build (Front End)\n// --- 4) Copy frontend Build dir to backend dir\n// --- 5) Test local        localhost:3001  (npm start back end)\n// --- 5) Back End          git init, git add build..., git commit, git push heroku master\n// --- \n// --------------------------------------------------------------------------\n// --- git add .gitignore build index.js package-lock.json package.json Procfile requests\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}