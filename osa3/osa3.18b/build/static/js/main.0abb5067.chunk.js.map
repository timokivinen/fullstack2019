{"version":3,"sources":["components/Filter.js","services/PersonService.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","handleChange","onChange","baseUrl","axios","get","then","response","data","newObject","post","id","delete","Person","props","name","console","log","toUpperCase","startsWith","filter","number","onClick","e","respData","personService","setErrorMessage","setTimeout","setPersons","persons","person","DeleteItem","Persons","p_persons","p_setPersons","p_filter","newFilter","map","deletePerson","Notification","message","className","App","useState","newName","setNewName","newNumber","setNewNumber","setNewFilter","errorMessage","useEffect","initialPersons","event","target","onSubmit","preventDefault","returnedPerson","catch","error","type","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0abb5067.chunk.js","sourcesContent":["// --------------------------------------------------------------\r\n// --- Component:   Filter\r\n// --- Purpose:     f\r\n// --- Date:        8.5.2019 Timo Kivinen\r\n// ---\r\n// --------------------------------------------------------------\r\nimport React from 'react'\r\n\r\n// ----------------------------------------------\r\n// ---\r\n// ----------------------------------------------\r\nconst Filter = ({value, handleChange}) => {\r\n    return (\r\n            <div>Rajaa näytettäviä: \r\n                <input value={value} onChange={handleChange}/>\r\n            </div>\r\n    )\r\n  }\r\n  export default Filter","// --------------------------------------------------------------\r\n// --- Name:    PersonService.js\r\n// --- Purpose: Tietokanta-operaatiot\r\n// --- Date:    21.5.2017 Timo Kivinen\r\n// --------------------------------------------------------------\r\nimport axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, deletePerson}\r\n","// --------------------------------------------------------------\r\n// --- Component:   Person\r\n// --- Purpose:     Yksittäisen henkilön renderöivä komponentti\r\n// ---              Muodostetaan delete-nappi\r\n// --- Date:        25.5.2019 Timo Kivinen\r\n// --- Fixes:       13.8.2019      \r\n// --------------------------------------------------------------\r\n// import axios from 'axios'\r\nimport React from 'react'\r\nimport personService from '../services/PersonService'\r\n\r\n// --------------------------------------------------------------\r\n// --- Poistetaan rivi\r\n// --- Palautetaan kaikki muut rivit paitsi poistettava (filterillä)\r\n// --------------------------------------------------------------\r\nconst DeleteItem = (props) => {\r\n    const p_id = props.id\r\n\r\n    const respData = personService.deletePerson(props.id)\r\n    console.log('***respData: ', respData)\r\n\r\n    props.setErrorMessage(`Henkilö  '${props.name}' on poistettu.`)\r\n\r\n    setTimeout(() => {\r\n        props.setErrorMessage(null)\r\n    }, 3000)\r\n\r\n    // --- Palautetaan kaikki muut rivit paitsi parametrina oleva rivi\r\n    props.setPersons(props.persons.filter(person => {\r\n        return person.id !== props.id\r\n    }))\r\n}\r\n\r\n// --------------------------------------------------------------\r\n// --- Person-komponentti\r\n// --- - listataan rivit, joiden alku noudattaa filtterin toivetta\r\n// --- - palautetaan tyhjä, jos riviä ei tulosteta listalle\r\n// --------------------------------------------------------------\r\nconst Person = (props) => {\r\n    const p_name=props.name\r\n    console.log(`*** Person --1 ${props.name}`)\r\n    if (props.name.toUpperCase().startsWith(props.filter.toUpperCase()) ||  props.filter === '') {\r\n        return (\r\n            <div>{props.name}&nbsp;&nbsp;{props.number} &nbsp;&nbsp;\r\n                <button onClick={(e)=>DeleteItem(props)}>\r\n                    Delete\r\n                </button>   \r\n            </div> \r\n        )\r\n    }\r\n    return ('')      \r\n}\r\n\r\nexport default Person\r\n","\r\n// --------------------------------------------------------------\r\n// --- Persons-komponentti\r\n// --- \r\n// --- 21.5.2019 Timo Kivinen\r\n// --------------------------------------------------------------\r\nimport React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = (props) => {\r\n    const p_persons=props.persons\r\n    const p_setPersons=props.setPersons\r\n    const p_filter=props.newFilter\r\n    // ---------------------------------------------------\r\n    // --- Kaikki rivit\r\n    // ---------------------------------------------------    \r\n    const rows_all = () => p_persons.map(person =>\r\n        <Person\r\n        name={person.name}\r\n        number={person.number}\r\n        id={person.id}        \r\n        filter={p_filter}\r\n        persons={p_persons}\r\n        setPersons={p_setPersons}\r\n        deletePerson={props.deletePerson}        \r\n        setErrorMessage={props.setErrorMessage}\r\n        />\r\n    )\r\n    return rows_all()\r\n }\r\n export default Persons","// --------------------------------------------------------------\r\n// --- Component:   Notification\r\n// --- Purpose:     f\r\n// --- Date:        25.5.2019 Timo Kivinen\r\n// ---\r\n// --------------------------------------------------------------\r\nimport React from 'react'\r\n\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification  ","// --------------------------------------------------------------------------\r\n// --- Tehtävä          3.18f:\r\n// --- Pvm:             26.8.2019 Timo Kivinen\r\n// --- Modified:        26.8.2019: addPerson function modified                 \r\n// --------------------------------------------------------------------------\r\nimport React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/PersonService'\r\n\r\n// -------------------------------------------------------------------------\r\n// --- APP\r\n// -------------------------------------------------------------------------\r\nconst App = (props) => {\r\n\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('qwerty')\r\n  const [ newNumber, setNewNumber ] = useState('1234567890')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  // -------------------------------------------------------------------------\r\n  // --- Editoiminen on mahdollista, kun rekisteröidään tapahtumankäsittelijä\r\n  // -------------------------------------------------------------------------\r\n  const handleNameChange = (event) => {\r\n      // console.log('handle:', event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n  // -------------------------------------------------------------------------\r\n  // --- Editoiminen on mahdollista, kun rekisteröidään tapahtumankäsittelijä\r\n  // -------------------------------------------------------------------------\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n  // -------------------------------------------------------------------------\r\n  // --- Editoiminen on mahdollista, kun rekisteröidään tapahtumankäsittelijä\r\n  // -------------------------------------------------------------------------\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n  // ---------------------------------------------------\r\n  // --- EFFECT HOOK\r\n  // ---------------------------------------------------\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n        .then(initialPersons => {\r\n          console.log(\"---------------------initialPersons\")\r\n          setPersons(initialPersons)\r\n      })\r\n  }, [])          \r\n  \r\n  // --------------------------------------------------------------\r\n  // --- addPerson - Henkilön ja puhelinnumeron lisäys\r\n  // --------------------------------------------------------------\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    // ---------------------------------------------------------------------\r\n    // --- UUSI HENKILÖ+PUHELINNUMERO\r\n    // --- Jos nimi on jo olemassa, päivitetään puhelinnumero\r\n    // --- Tässä versiossa ei kysellä, halutaanko muuttaa puhelinnumeroa\r\n    // ---------------------------------------------------------------------\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }\r\n    // --- Käytetään uuden rivin luomiseen service-kenttää \"create\"\r\n    // --- Tehtävä 3.17: päivitetään listatietokannasta, ei konkata\r\n    personService\r\n      .create(personObject)\r\n      .then(returnedPerson => {\r\n        // --- setPersons(persons.concat(returnedPerson))\r\n        // --- Päivitetään lista tietokannasta\r\n        personService\r\n          .getAll()\r\n          .then(initialPersons => {\r\n          setPersons(initialPersons)\r\n          })\r\n        })\r\n        .catch(error => setErrorMessage(`Lisäys epäonnistui. ${error}`))\r\n    \r\n    setErrorMessage(`uusi henkilö lisätty/muutettu.`)\r\n    setTimeout(() => {\r\n      setErrorMessage(null)\r\n    }, 3000)\r\n    \r\n  } // -- AddPerson\r\n\r\n\r\n  const deletePerson = (p) => {\r\n    console.log('DELETEPERSON:', p)\r\n  }\r\n  \r\n  // ---------------------------------------------------\r\n  // --- RETURN\r\n  // ---------------------------------------------------\r\n  return (\r\n        <div>\r\n        <h2>Puhelinluettelo</h2>\r\n\r\n        <Notification message={errorMessage} />\r\n\r\n        <div>\r\n            <Filter value={newFilter} handleChange={handleFilterChange}/>\r\n        </div>\r\n\r\n        <h3>Lisää uusi</h3>\r\n        \r\n        <form onSubmit={addPerson}>\r\n          <div>nimi: <input value={newName} onChange={handleNameChange}/></div>\r\n          <div>numero:<input value={newNumber} onChange={handleNumberChange}/></div>\r\n          <div><button type=\"submit\">lisää</button></div>\r\n                 \r\n        </form>\r\n\r\n        <h2>Numerot</h2>\r\n       \r\n        <Persons persons={persons} newFilter={newFilter} setPersons={setPersons} setErrorMessage={setErrorMessage} \r\n              deletePerson={deletePerson}/>\r\n        </div>\r\n      )\r\n  }\r\n\r\n  export default App\r\n","// --------------------------------------------------------------------------\n// --- Tehtävä          3.18f\n// --- Pvm:             26.8.2019 Timo Kivinen\n// ---                  \n// --- Aikaa käytetty:  x h\n// --------------------------------------------------------------------------\n// --- Projektin luonti:    npm create react-app osaX.XXf\n// --- Axios install:       npm install axios\n// --------------------------------------------------------------------------\n// --- 1) Back end:         app.use(express.static('build'))\n// --- 2) Front end:        baseUrl = /aaa/bbb\n// --- 3) Production build  npm run build (Front End)\n// --- 4) Copy frontend Build dir to backend dir\n// --- 5) Test local        localhost:3001  (npm start back end)\n// --- 5) Back End          git init, git add build..., git commit, git push heroku master\n// --------------------------------------------------------------------------\n// --- git add .gitignore build index.js package-lock.json package.json Procfile requests\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}